{
	"info": {
		"_postman_id": "cd3fd3c6-6007-4a28-b580-0ff6d86f8b2e",
		"name": "Transbank Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "http://localhost:5000/people/",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc902d7c-d3fb-486c-917f-fea2b15378cc",
						"exec": [
							" const response = pm.response.json();\r",
							"\r",
							" console.log(response.firstName);\r",
							"\r",
							" pm.test(\"users is correct\",()=> {\r",
							"     pm.expect(response.firstName).to.eql(pm.iterationData.get(\"firstName\"));\r",
							"     pm.expect(response.lastName).to.eql(pm.iterationData.get(\"lastName\"));\r",
							"     pm.expect(response.age).to.eql(pm.iterationData.get(\"age\"));\r",
							"\r",
							" });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4d8b37e9-4e96-4af3-9114-b8607ad9047e",
						"exec": [
							"let queryParams = '';\r",
							"const users= {\r",
							"    firstName: \"Alejandro\",\r",
							"    lastName: \"Ramos\",\r",
							"    age: 33\r",
							"};\r",
							"\r",
							"queryParams = '?'+ Object.keys(users).map(key => '${Key}=${users[key]}').join('&');\r",
							"pm.globals.set(\"queryParams\", queryParams);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"firstMame\": \"Alejandro\",\n        \"lastName\": \"Ramos\",\n        \"age\": 33\n}"
				},
				"url": {
					"raw": "http://localhost:5000/people/{{queryParams}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"people",
						"{{queryParams}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/people/",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "16eb2d6d-1b23-4d04-a823-0bf64d2c22f0",
						"exec": [
							"let uuid = require ('uuid')",
							"let myUUID = uuid.v4()",
							"console.log(myUUID)",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "57cd70c6-e994-4616-bd0b-150539c1ec6e",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code is 200\", () => {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"",
							"});",
							"",
							"//validar data",
							"pm.test(\"validate user\", function() {",
							"const response = pm.response.json();",
							"     pm.expect(response.firstName).to.eql(pm.iterationData.get(\"firstName\"));",
							"     pm.expect(response.lastName).to.eql(pm.iterationData.get(\"lastName\"));",
							"     pm.expect(response.age).to.eql(pm.iterationData.get(\"age\"));",
							"});",
							"",
							"//valores null",
							"pm.test(\"your-value is not null\", function () {",
							"var jsonData = pm.response.json();",
							"",
							"pm.expect(jsonData.firstName).not.eql(null);",
							"});",
							"",
							"",
							"//creando schema",
							"var  response = pm.response.json();",
							"var schema = {",
							"    \"users\":{",
							"        \"type\": \"object\",",
							"        \"Properties\":",
							"        {",
							"            \"firstName\": {",
							"                \"type\": \"string\",",
							"                \"minimum\":6,",
							"                \"maximun\":20",
							"                },",
							"            \"lastName\": {",
							"                \"type\": \"string\",",
							"                \"minimum\":6,",
							"                \"maximun\":20",
							"                },",
							"             ",
							"            \"age\": {",
							"                \"type\": \"integer\",",
							"                 \"minLength\": 18,",
							"                 \"maxlength\":100}",
							"        }",
							"    }",
							"};",
							"",
							"//validando esquema",
							"pm.test(\"schema is valid\", function() {",
							"    pm.expect(tv4.validate(response, schema)).to.be.true;",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"age\": \"{{age}}\"\n}"
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3c6f66e8-8196-47ae-80b3-c102eada1b67",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4b80d863-17a7-4afc-9c0d-83258bb0aeae",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "dd6d5057-a4af-47b8-81ad-fa43a3bb027d",
			"key": "lastName",
			"value": "{{lastName}}"
		},
		{
			"id": "f5a4577d-8c5e-44cd-a8bf-5e9c3498cc44",
			"key": "firstName",
			"value": "{{firstName}}"
		},
		{
			"id": "1ce02ac7-9c0e-4814-9d45-88afb0f5d020",
			"key": "age",
			"value": "{{age}}"
		}
	],
	"protocolProfileBehavior": {}
}